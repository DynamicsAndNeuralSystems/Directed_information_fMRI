#!/bin/tcsh
#PBS -j oe
#PBS -l walltime=24:00:00
#PBS -V

##### Change to current working directory
cd $PBS_O_WORKDIR

# Load anaconda
source /usr/physics/python/Anaconda3-2022.10/etc/profile.d/conda.csh

# Activate pyspi environment
conda activate pyspi

##### Obtain Parameters from input.txt file using $PBS_ARRAY_INDEX as the line number #####

# Check if user supplied a command-line argument
if (! $?line_to_read) then
    set line_to_read = $PBS_ARRAY_INDEX
endif

set subject_ID=`sed -n "${line_to_read} p" $input_model_file`
echo "Now downloading + parcellating time series for $subject_ID"

# Define code path
set PATH=~/.local/bin:$PATH
set code_path = /taiji1/abry4213/github/Homotopic_FC/fMRI_preprocessing 

# Define data paths
set atlas_data_path = /taiji1/abry4213/data/neuroimaging_atlases/surfaces/
set fMRI_data_path = /taiji1/abry4213/data/HCP/S1200/resting_fMRI/

# Download data from HCP AWS if the file doesn't already exist
if ! (-e $fMRI_data_path/raw_data/${subject_ID}/rfMRI_REST1_RL_Atlas_MSMAll_hp2000_clean.dtseries.nii) then
    aws s3 cp s3://hcp-openaccess/HCP_1200/${subject_ID}/MNINonLinear/Results/rfMRI_REST1_LR/rfMRI_REST1_LR_Atlas_MSMAll_hp2000_clean.dtseries.nii $fMRI_data_path/raw_data/${subject_ID}/
    aws s3 cp s3://hcp-openaccess/HCP_1200/${subject_ID}/MNINonLinear/Results/rfMRI_REST1_RL/rfMRI_REST1_RL_Atlas_MSMAll_hp2000_clean.dtseries.nii $fMRI_data_path/raw_data/${subject_ID}/
endif

# Call python script 
python3 $code_path/parcellate_cortex_subcortex.py \
    --subject $subject_ID \
    --atlas_data_path $atlas_data_path \
    --fMRI_data_path $fMRI_data_path 